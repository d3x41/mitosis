{
  "manifest": {
    "name": "prettier-plugin-organize-imports",
    "version": "3.2.4",
    "description": "Make prettier organize your imports using the TypeScript language service API.",
    "keywords": [
      "prettier",
      "prettier-plugin",
      "typescript",
      "imports",
      "organize-imports"
    ],
    "main": "index.js",
    "scripts": {
      "test": "ava --verbose",
      "preversion": "npm test"
    },
    "files": [
      "index.js",
      "lib",
      "prettier.d.ts"
    ],
    "author": {
      "name": "Simon Haenisch",
      "url": "https://github.com/simonhaenisch"
    },
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/simonhaenisch/prettier-plugin-organize-imports.git"
    },
    "homepage": "https://github.com/simonhaenisch/prettier-plugin-organize-imports#readme",
    "peerDependencies": {
      "@volar/vue-language-plugin-pug": "^1.0.4",
      "@volar/vue-typescript": "^1.0.4",
      "prettier": ">=2.0",
      "typescript": ">=2.9"
    },
    "peerDependenciesMeta": {
      "@volar/vue-language-plugin-pug": {
        "optional": true
      },
      "@volar/vue-typescript": {
        "optional": true
      }
    },
    "devDependencies": {
      "@types/node": "20.8.10",
      "@volar/vue-language-plugin-pug": "1.0.9",
      "@volar/vue-typescript": "1.0.9",
      "ava": "3.15.0",
      "prettier": "3.0.3",
      "typescript": "5.2.2"
    },
    "prettier": {
      "printWidth": 120,
      "singleQuote": true,
      "trailingComma": "all",
      "useTabs": true,
      "overrides": [
        {
          "files": [
            "package.json",
            "*.md"
          ],
          "options": {
            "useTabs": false
          }
        }
      ]
    },
    "_registry": "npm",
    "_loc": "/home/user/.cache/yarn/v6/npm-prettier-plugin-organize-imports-3.2.4-77967f69d335e9c8e6e5d224074609309c62845e-integrity/node_modules/prettier-plugin-organize-imports/package.json",
    "readmeFilename": "readme.md",
    "readme": "![Tests](https://github.com/simonhaenisch/prettier-plugin-organize-imports/workflows/Tests/badge.svg)\n\n# Prettier Plugin: Organize Imports\n\n> Make sure that your import statements stay consistent no matter who writes them and what their preferences are.\n\nA plugin that makes Prettier organize your imports (i. e. sorts, combines and removes unused ones) using the `organizeImports` feature of the TypeScript language service API. This is the same as using the \"Organize Imports\" action in VS Code.\n\n**Features**\n\n- ðŸ‘Œ Dependency-free (just peer-dependencies you probably already have).\n- ðŸ’ª Supports `.js`, `.jsx`, `.ts`, `.tsx` and `.vue` files.\n- ðŸš€ Zero config.\n- ðŸ¤“ No more weird diffs or annoying merge conflicts in PRs caused by import statements.\n- ðŸ¤¯ If your editor supports auto-imports, you'll stop thinking about your imports so much that you won't even care about their order anymore.\n\n**Caveat**\n\nThis plugin inherits, extends, and then overrides the built-in Prettier parsers for `babel`, `babel-ts`, `typescript` and `vue`. This means that it is incompatible with other plugins that do the same; only the last loaded plugin that exports one of those parsers will function.\n\n## Installation\n\n```sh\nnpm install --save-dev prettier-plugin-organize-imports\n```\n\n_Note that `prettier` and `typescript` are peer dependencies, so make sure you have those installed in your project._\n\n## Usage\n\n### Prettier 3\n\nAutomatic plugin discovery [has been removed](https://prettier.io/blog/2023/07/05/3.0.0.html#plugin-search-feature-has-been-removed-14759httpsgithubcomprettierprettierpull14759-by-fiskerhttpsgithubcomfisker). Thus you need to configure Prettier to use the plugin according to the [Plugins docs](https://prettier.io/docs/en/plugins.html), for example by adding it to the `plugins` config option:\n\n```json\n{\n  \"plugins\": [\"prettier-plugin-organize-imports\"]\n}\n```\n\n### Prettier 2\n\nThe plugin will be loaded by Prettier automatically. No configuration needed.\n\nNote that automatic plugin discovery is not supported with some package managers, e. g. Yarn PnP (see https://github.com/prettier/prettier/issues/8474). In that case follow the instructions for Prettier 3 above.\n\n## Configuration\n\n### Skip Files\n\nFiles containing the substring `// organize-imports-ignore` or `// tslint:disable:ordered-imports` are skipped.\n\n### Skip Destructive Code Actions\n\nIf you don't want destructive code actions (like removing unused imports), you can enable the option `organizeImportsSkipDestructiveCodeActions` via your Prettier config.\n\n```json\n{\n  \"organizeImportsSkipDestructiveCodeActions\": true\n}\n```\n\n## Compatibility\n\n### ESLint\n\nFor compatibility with [ESLint](https://eslint.org/) or other linters, see [\"Integrating with Linters\"](https://prettier.io/docs/en/integrating-with-linters.html) in the Prettier docs. You should have any import order rules/plugins disabled.\n\n### React\n\nDepending on your configuration, if you need the `React` import to stay even if it's \"unused\" (i.e. only needed for the JSX factory), make sure to have the `jsx` option set to `react` in your `tsconfig.json`. For more details [click here](https://www.typescriptlang.org/docs/handbook/jsx.html#basic-usage).\n\n### Vue.js\n\nMake sure that you have the optional peer dependency `@volar/vue-typescript` installed.\n\n```\nnpm i --save-dev @volar/vue-typescript\n```\n\nIf you're using Vue.js with Pug templates, you'll also need to install `@volar/vue-language-plugin-pug` as a dev dependency, and configure it in `vueCompilerOptions` (see [usage](https://www.npmjs.com/package/@volar/vue-language-plugin-pug)).\n\n## Debug Logs\n\nIf something doesn't work, you can try to prefix your `prettier` command with `DEBUG=true` which will enable this plugin to print some logs.\n\n## Rationale/Disclaimer\n\nThis plugin acts outside of [Prettier's scope](https://prettier.io/docs/en/rationale#what-prettier-is-_not_-concerned-about) because _\"Prettier only prints code. It does not transform it.\"_, and technically sorting is a code transformation because it changes the AST (this plugin even removes code, i. e. unused imports). In my opinion however, the import statements are not _really_ part of the code, they are merely directives that instruct the module system where to find the code (only true as long as your imports are side-effects free regarding the global scope, i. e. import order doesn't matter), comparable with `using` directives in C# or `#include` preprocessing directives in C. Therefore the practical benefits outweigh sticking with the philosophy in this case.\n\n## Changelog\n\nVersion `3.2.4` implements a fix to skip when formatting ranges (i.e. if the plugin is requested to format a range, it doesn't do anything because it would lack the full file context).\n\nVersion `3.2.3` updates the readme with instructions for Prettier 3.\n\nVersion `3.2.2` fixes a performance regression introduced in `3.2.0`.\n\nVersion `3.2.1` fixes the implementation of the language service host's `getCurrentDirectory` method to return the directory containing the tsconfig, rather than using `ts.sys.getCurrentDirectory` (which returns `process.cwd()`). This should prevent issues with resolving compiler plugins with Volar (which is used for Vue support).\n\nVersion `3.2.0` adds and fixes support for pug templates in Vue files (via `@volar/vue-language-plugin-pug`). Please be aware that you'll need to update your version of the `@volar/vue-typescript` peer dependency from `0.x` to `1.x`.\n\nVersion `3.1.0` adds an option to skip destructive code actions like removing unused imports.\n\nVersion `3.0.3` fixes a performance regression introduced in `3.0.2`.\n\nVersion `3.0.2` fixes a regression introduced by adding some file-system related methods to the language service host (to fix a bug), which revealed that another method's implementation was incorrect.\n\nVersion `3.0.1` bumps the `@volar/vue-typescript` version to fix more edge cases, e. g. not removing imports when a component is used via kebab-case naming. `@volar/vue-typescript` is now defined as an optional peer dependency and you'll need to install version `0.39` or later. Furthermore a fix has been added that should help support more module resolution algorithms.\n\nVersion `3.0.0` switches to a different package for Vue support, which fixes some more issues, e. g. support for setup scripts. No breaking changes otherwise.\n\nVersion `2.3.4` fixes an issue with Vue v2 files.\n\nVersion `2.3.3` fixes a bug where default imports were removed erroneously.\n\nVersion `2.3.1` adds debug logs and fixes Vue.js support.\n\nVersion `2.2.0` adds a compiler options cache to improve performance.\n\nVersion `2.1.0` adds support for Vue.js (`.vue` files).\n\nVersion `2.0.0` adds support for the parsers `babel` (i. e. JavaScript) and `babel-ts` which are only available since Prettier v2 (and thus the peer dependency has received a major bump).\n\n## License\n\n[MIT](/license).\n",
    "licenseText": "MIT License\n\nCopyright (c) Simon HÃ¤nisch\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/prettier-plugin-organize-imports/-/prettier-plugin-organize-imports-3.2.4.tgz#77967f69d335e9c8e6e5d224074609309c62845e",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/prettier-plugin-organize-imports/-/prettier-plugin-organize-imports-3.2.4.tgz",
    "hash": "77967f69d335e9c8e6e5d224074609309c62845e",
    "integrity": "sha512-6m8WBhIp0dfwu0SkgfOxJqh+HpdyfqSSLfKKRZSFbDuEQXDDndb8fTpRWkUrX/uBenkex3MgnVk0J3b3Y5byog==",
    "registry": "npm",
    "packageName": "prettier-plugin-organize-imports",
    "cacheIntegrity": "sha512-6m8WBhIp0dfwu0SkgfOxJqh+HpdyfqSSLfKKRZSFbDuEQXDDndb8fTpRWkUrX/uBenkex3MgnVk0J3b3Y5byog== sha1-d5Z/adM16cjm5dIkB0YJMJxihF4="
  },
  "registry": "npm",
  "hash": "77967f69d335e9c8e6e5d224074609309c62845e"
}