{
  "manifest": {
    "name": "locate-character",
    "version": "3.0.0",
    "description": "Get the line and column number of a specific character in a string",
    "type": "module",
    "types": "./types/index.d.ts",
    "exports": {
      "types": "./types/index.d.ts",
      "import": "./src/index.js"
    },
    "scripts": {
      "test": "node test/test.js",
      "build": "dts-buddy",
      "prepublishOnly": "npm test && npm run build"
    },
    "files": [
      "src",
      "types",
      "README.md"
    ],
    "repository": {
      "type": "git",
      "url": "git+https://gitlab.com/Rich-Harris/locate-character.git"
    },
    "keywords": [
      "string",
      "character",
      "locate",
      "line",
      "column",
      "location"
    ],
    "author": {
      "name": "Rich Harris"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://gitlab.com/Rich-Harris/locate-character/issues"
    },
    "homepage": "https://gitlab.com/Rich-Harris/locate-character#README",
    "devDependencies": {
      "dts-buddy": "^0.1.6",
      "typescript": "^5.1.3"
    },
    "packageManager": "pnpm@8.6.2",
    "_registry": "npm",
    "_loc": "/home/user/.cache/yarn/v6/npm-locate-character-3.0.0-0305c5b8744f61028ef5d01f444009e00779f974-integrity/node_modules/locate-character/package.json",
    "readmeFilename": "README.md",
    "readme": "# locate-character\n\nGet the line and column number of a particular character in a string.\n\n## Installation\n\n`npm install locate-character`, or get it from [unpkg.com/locate-character](https://unpkg.com/locate-character).\n\n## Usage\n\nTo search for a particular character, using the index or a search string, use `locate`:\n\n```js\nimport { locate } from 'locate-character';\n\nconst sample = `\nA flea and a fly in a flue\nWere imprisoned, so what could they do?\nSaid the fly, \"let us flee!\"\n\"Let us fly!\" said the flea.\nSo they flew through a flaw in the flue.\n`.trim();\n\n// Using a character index\nconst index = sample.indexOf('fly');\nlocate(sample, index);\n// -> { line: 0, column: 13, character: 13 }\n\n// Using the string itself\nlocate(sample, 'fly');\n// -> { line: 0, column: 13, character: 13 }\n\n// Using the string with a start index\nlocate(sample, 'fly', { startIndex: 14 });\n// -> { line: 2, column: 9, character: 76 }\n```\n\nIf you will be searching the same string repeatedly, it's much faster if you use `getLocator`:\n\n```js\nimport { getLocator } from 'locate-character';\n\nconst locate = getLocator(sample);\n\nlet location = locate(13);\n// -> { line: 0, column: 13, character: 13 }\n\nlocation = locate('fly', { startIndex: location.character + 1 });\n// -> { line: 2, column: 9, character: 76 }\n\nlocation = locate('fly', { startIndex: location.character + 1 });\n// -> { line: 3, column: 8, character: 104 }\n```\n\nIn some situations (for example, dealing with sourcemaps), you need one-based line numbers:\n\n```js\ngetLocator(sample, { offsetLine: 1 });\nlocate(sample, { offsetLine: 1 });\n```\n\nThere's also an `offsetColumn` option which is less useful in real-world situations.\n\n## License\n\nMIT\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/locate-character/-/locate-character-3.0.0.tgz#0305c5b8744f61028ef5d01f444009e00779f974",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/locate-character/-/locate-character-3.0.0.tgz",
    "hash": "0305c5b8744f61028ef5d01f444009e00779f974",
    "integrity": "sha512-SW13ws7BjaeJ6p7Q6CO2nchbYEc3X3J6WrmTTDto7yMPqVSZTUyY5Tjbid+Ab8gLnATtygYtiDIJGQRRn2ZOiA==",
    "registry": "npm",
    "packageName": "locate-character",
    "cacheIntegrity": "sha512-SW13ws7BjaeJ6p7Q6CO2nchbYEc3X3J6WrmTTDto7yMPqVSZTUyY5Tjbid+Ab8gLnATtygYtiDIJGQRRn2ZOiA== sha1-AwXFuHRPYQKO9dAfREAJ4Ad5+XQ="
  },
  "registry": "npm",
  "hash": "0305c5b8744f61028ef5d01f444009e00779f974"
}